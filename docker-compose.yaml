services:
    backend:
        image: example_project.backend:v1.0
        build:
            context: docker-configs/backend
        working_dir: /app
        command: [ "rr", "serve", "--config", ".rr.dev.yaml" ]
        environment:
            PHP_IDE_CONFIG: "serverName=example-project-docker"
            TERM: "${TERM:-xterm}"
        ports:
            - "127.0.0.1:8080:8080"
            - "127.0.0.1:8083:8083"
            - "127.0.0.1:9501:9501" # open swoole
        volumes:
            - ./docker-configs/backend/ssl/:/etc/ssl/backend/
            - ./docker-configs/backend/configs/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
            - ./docker-configs/backend/configs/php.ini:/usr/local/etc/php/conf.d/php.ini
            - ./docker-configs/backend/configs/.bash_completion:/home/app/.bash_completion
            - ./docker-configs/backend/configs/.bashrc.local:/home/app/.bashrc.local
            - .:/app:cached
            - app_user:/home/app
        extra_hosts:
            host.docker.internal: host-gateway
        depends_on:
            - postgresql

    dump_server:
        image: example_project.backend:v1.0
        working_dir: /app
        command: [ "vendor/bin/var-dump-server", "--no-ansi", "--host", "0.0.0.0:9912" ]
        volumes: [ .:/app:cached ]
        depends_on: [ backend ]

    postgresql:
        image: postgres:17.0
        command: [ "postgres", "-c", "max_connections=200", "-c", "log_statement=all" ]
        healthcheck:
            test: [ "CMD", "pg_isready", "-d", "project_db", "-U", "${DATABASE_USER:-postgres}" ]
            timeout: 5s
            retries: 5
            start_period: 60s
        environment:
            PGDATA: "/var/lib/postgresql/data/pgdata"
            POSTGRES_PASSWORD: "qwerty"
            POSTGRES_DB: "project_db"
            POSTGRES_USER: ${DATABASE_USER:-postgres}
        ports:
            - "127.0.0.1:15432:5432"
        volumes:
            - "postgres_data:/var/lib/postgresql/data"

    temporal:
        image: temporalio/auto-setup:1.27
        environment:
            DB: 'postgres12'
            POSTGRES_SEEDS: 'postgresql'
            DB_PORT: 5432
            DBNAME: 'temporal'
            POSTGRES_USER: ${DATABASE_USER:-postgres}
            POSTGRES_PWD: "qwerty"
            DYNAMIC_CONFIG_FILE_PATH: 'config/dynamicconfig/development-sql.yaml'
        ports:
            - "127.0.0.1:7233:7233"
        volumes:
            - ./docker-configs/temporal:/etc/temporal/config/dynamicconfig
        depends_on: [ postgresql ]

    temporal_ui:
        image: temporalio/ui:v2.38.3
        environment:
            TEMPORAL_ADDRESS: 'temporal:7233'
        ports:
            - "127.0.0.1:8000:8080"
        depends_on: [ temporal ]

    elastic:
        image: elasticsearch:9.0.1
        ports:
            - "127.0.0.1:9200:9200"
            - "127.0.0.1:9300:9300"
        environment:
            # Increase JVM heap size to prevent out-of-memory errors
            ES_JAVA_OPTS: "-Xms512m -Xmx512m"
        volumes:
            - "elastic_data:/usr/share/elasticsearch/data"

    redis:
        image: redis:7.4
        ports:
            - "127.0.0.1:16379:6379"

    mailer:
        image: axllent/mailpit
        ports:
            - "1025"
            - "8025"
        environment:
            MP_SMTP_AUTH_ACCEPT_ANY: 1
            MP_SMTP_AUTH_ALLOW_INSECURE: 1

volumes:
    postgres_data: ~
    elastic_data: ~
    app_user: ~
